services:
  supernode-{{ partition_id + 1 }}:
    image: flwr/supernode:{{ flwr_version | default("1.18.0") }}
    command:
      - --superlink
      - {{ superlink_ip | default("127.0.0.1") }}:9092
      - --clientappio-api-address
      - 0.0.0.0:9094
      - --isolation
      - process
      - --node-config
      - "partition-id={{ partition_id | default(0) }} num-partitions={{ num_partitions | default(1) }}"
      - --root-certificates
      - certificates/superlink-ca.crt
    secrets:
      - source: superlink-ca-certfile
        target: /app/certificates/superlink-ca.crt

  clientapp-{{ partition_id + 1 }}:
    build:
      context: {{ project_dir | default("..") }}
      dockerfile_inline: |
        FROM flwr/clientapp:{{ flwr_version | default("1.18.0") }}

        WORKDIR /app

        # Step 1: install dependencies dulu (jarang berubah)
        COPY --chown=app:app pyproject.base.toml pyproject.toml
        RUN sed -i 's/.*flwr\[simulation\].*//' pyproject.toml \
          && python -m pip install -U --no-cache-dir .

        # Step 2: overwrite pyproject.toml dengan konfigurasi Flower
        COPY --chown=app:app pyproject.flwr.toml pyproject.toml
 
        COPY --chown=app:app client/start_client.sh /app/start-clientapp.sh
        RUN chmod +x /app/start-clientapp.sh

        ENTRYPOINT ["/app/start-clientapp.sh"]

    command:
      - --insecure
      - --clientappio-api-address
      - supernode:9094
    volumes:
      - "{{ client_data_dir | default('./data') }}:/app/data"
      - "./global_models:/app/received_global_models"
      - "./client_checkpoints:/app/client_checkpoints"
    deploy:
      resources:
        limits:
          cpus: "2"
    stop_signal: SIGINT
    depends_on:
      - supernode-{{ partition_id + 1 }}
    ports:
      - 9200:9200
    environment:
      - PROM_PORT=9200
      - DATA_PATH=/app/data/data-{{ partition_id + 1 }}.csv

  streamlit-ui-{{ partition_id + 1 }}:
    build:
      context: ..
      dockerfile_inline: |
        FROM python:3.10-slim

        WORKDIR /app

        # Copy dan gabungkan pyproject
        RUN pip install -U --no-cache-dir streamlit docker numpy pandas torch 

        # Copy file UI Streamlit
        COPY client/ui_client.py .
        COPY client/mini_predict.py .

        # Jalankan Streamlit
        ENTRYPOINT ["streamlit", "run"]

    command: ["ui_client.py", "--server.port=8501", "--server.address=0.0.0.0"]

    ports:
      - "8501:8501"

    volumes:
      - "./data:/app/data"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./global_models:/app/received_global_models"

    environment:
      - DATA_ID=data-{{ partition_id + 1 }}
    
    secrets:
      - source: superlink-ca-certfile
        target: /app/certificates/superlink-ca.crt

    depends_on:
      - clientapp-{{ partition_id + 1 }}

secrets:
  superlink-ca-certfile:
    file: ../superlink-certificates/ca.crt

